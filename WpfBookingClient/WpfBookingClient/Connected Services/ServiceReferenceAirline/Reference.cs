//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfBookingClient.ServiceReferenceAirline {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Flight", Namespace="http://schemas.datacontract.org/2004/07/AirlineService.Models")]
    [System.SerializableAttribute()]
    public partial class Flight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfBookingClient.ServiceReferenceAirline.Airline AirlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DepartureTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfBookingClient.ServiceReferenceAirline.City DestinationField;
        
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfBookingClient.ServiceReferenceAirline.City OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservedSeatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalSeatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfBookingClient.ServiceReferenceAirline.Airline Airline {
            get {
                return this.AirlineField;
            }
            set {
                if ((object.ReferenceEquals(this.AirlineField, value) != true)) {
                    this.AirlineField = value;
                    this.RaisePropertyChanged("Airline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DepartureTime {
            get {
                return this.DepartureTimeField;
            }
            set {
                if ((this.DepartureTimeField.Equals(value) != true)) {
                    this.DepartureTimeField = value;
                    this.RaisePropertyChanged("DepartureTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfBookingClient.ServiceReferenceAirline.City Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfBookingClient.ServiceReferenceAirline.City Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservedSeats {
            get {
                return this.ReservedSeatsField;
            }
            set {
                if ((this.ReservedSeatsField.Equals(value) != true)) {
                    this.ReservedSeatsField = value;
                    this.RaisePropertyChanged("ReservedSeats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalSeats {
            get {
                return this.TotalSeatsField;
            }
            set {
                if ((this.TotalSeatsField.Equals(value) != true)) {
                    this.TotalSeatsField = value;
                    this.RaisePropertyChanged("TotalSeats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Airline", Namespace="http://schemas.datacontract.org/2004/07/AirlineService.Models")]
    [System.SerializableAttribute()]
    public partial class Airline : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/AirlineService.Models")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfBookingClient.ServiceReferenceAirline.City cityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfBookingClient.ServiceReferenceAirline.City city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceAirline.IAirSvc")]
    public interface IAirSvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirSvc/GetFlights", ReplyAction="http://tempuri.org/IAirSvc/GetFlightsResponse")]
        System.Collections.Generic.Dictionary<string, WpfBookingClient.ServiceReferenceAirline.Flight[]> GetFlights(System.DateTime DepartureTime, System.DateTime LandingTime, string destination, int numberOfSeats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirSvc/GetFlights", ReplyAction="http://tempuri.org/IAirSvc/GetFlightsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WpfBookingClient.ServiceReferenceAirline.Flight[]>> GetFlightsAsync(System.DateTime DepartureTime, System.DateTime LandingTime, string destination, int numberOfSeats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirSvc/BookAFlight", ReplyAction="http://tempuri.org/IAirSvc/BookAFlightResponse")]
        WpfBookingClient.ServiceReferenceAirline.Flight BookAFlight(WpfBookingClient.ServiceReferenceAirline.Flight flight, int numberOfSeats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirSvc/BookAFlight", ReplyAction="http://tempuri.org/IAirSvc/BookAFlightResponse")]
        System.Threading.Tasks.Task<WpfBookingClient.ServiceReferenceAirline.Flight> BookAFlightAsync(WpfBookingClient.ServiceReferenceAirline.Flight flight, int numberOfSeats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirSvc/GetAllFlight", ReplyAction="http://tempuri.org/IAirSvc/GetAllFlightResponse")]
        WpfBookingClient.ServiceReferenceAirline.Flight[] GetAllFlight(System.DateTime DepartureTime, System.DateTime LandingTime, string destination, int numberOfSeats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAirSvc/GetAllFlight", ReplyAction="http://tempuri.org/IAirSvc/GetAllFlightResponse")]
        System.Threading.Tasks.Task<WpfBookingClient.ServiceReferenceAirline.Flight[]> GetAllFlightAsync(System.DateTime DepartureTime, System.DateTime LandingTime, string destination, int numberOfSeats);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAirSvcChannel : WpfBookingClient.ServiceReferenceAirline.IAirSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AirSvcClient : System.ServiceModel.ClientBase<WpfBookingClient.ServiceReferenceAirline.IAirSvc>, WpfBookingClient.ServiceReferenceAirline.IAirSvc {
        
        public AirSvcClient() {
        }
        
        public AirSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AirSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AirSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AirSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<string, WpfBookingClient.ServiceReferenceAirline.Flight[]> GetFlights(System.DateTime DepartureTime, System.DateTime LandingTime, string destination, int numberOfSeats) {
            return base.Channel.GetFlights(DepartureTime, LandingTime, destination, numberOfSeats);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, WpfBookingClient.ServiceReferenceAirline.Flight[]>> GetFlightsAsync(System.DateTime DepartureTime, System.DateTime LandingTime, string destination, int numberOfSeats) {
            return base.Channel.GetFlightsAsync(DepartureTime, LandingTime, destination, numberOfSeats);
        }
        
        public WpfBookingClient.ServiceReferenceAirline.Flight BookAFlight(WpfBookingClient.ServiceReferenceAirline.Flight flight, int numberOfSeats) {
            return base.Channel.BookAFlight(flight, numberOfSeats);
        }
        
        public System.Threading.Tasks.Task<WpfBookingClient.ServiceReferenceAirline.Flight> BookAFlightAsync(WpfBookingClient.ServiceReferenceAirline.Flight flight, int numberOfSeats) {
            return base.Channel.BookAFlightAsync(flight, numberOfSeats);
        }
        
        public WpfBookingClient.ServiceReferenceAirline.Flight[] GetAllFlight(System.DateTime DepartureTime, System.DateTime LandingTime, string destination, int numberOfSeats) {
            return base.Channel.GetAllFlight(DepartureTime, LandingTime, destination, numberOfSeats);
        }
        
        public System.Threading.Tasks.Task<WpfBookingClient.ServiceReferenceAirline.Flight[]> GetAllFlightAsync(System.DateTime DepartureTime, System.DateTime LandingTime, string destination, int numberOfSeats) {
            return base.Channel.GetAllFlightAsync(DepartureTime, LandingTime, destination, numberOfSeats);
        }
    }
}
